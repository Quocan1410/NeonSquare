spring.application.name=backend

# --- Database (read from environment) ---
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate ---
# Default to 'update' in prod; override with JPA_DDL_AUTO in env.yaml if you need 'create' temporarily
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
# Dialect is auto-detected, but keeping it is fine:
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true

# --- HikariCP (connection pool) ---
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=180000
spring.datasource.hikari.leak-detection-threshold=20000

# --- CORS (used by SecurityConfig via @Value("${cors.allowed-origins}") ) ---
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}

# --- Docker compose auto support off (not used here) ---
spring.docker.compose.enabled=false

# --- Actuator (health endpoints for Cloud Run) ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=ALWAYS
logging.level.org.springframework.web=DEBUG

